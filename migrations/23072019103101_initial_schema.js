exports.up = (knex) => {
  return knex.schema
    .raw('CREATE EXTENSION IF NOT EXISTS "uuid-ossp"')
    .createTable("users", (table) => {
      table.uuid("id").defaultTo(knex.raw("uuid_generate_v4()")).primary();
      table.string("email");
      table.string("pw");
      table.string("first_name");
      table.string("last_name");
      table.timestamp("created_at");
      table.timestamp("last_login");
    })
    .createTable("states", (table) => {
      table.uuid("id").defaultTo(knex.raw("uuid_generate_v4()")).primary();
      table.string("state_name");
      table.string("state_abbrev");
    })
    .createTable("sportsbooks", (table) => {
      table.uuid("id").defaultTo(knex.raw("uuid_generate_v4()")).primary();
      table.string("name");
      table.string("state");
      table.string("data_endpoint");
      table.string("login_url");
      table
        .uuid("state_id")
        .unsigned()
        .references("id")
        .inTable("states")
        .onDelete("CASCADE")
        .index();
    })
    .createTable("accounts", (table) => {
      table.uuid("id").defaultTo(knex.raw("uuid_generate_v4()")).primary();
      table.string("state");
      table.string("username");
      table.string("hashed_pw");
      table.timestamp("created_at");
      table.timestamp("last_check");
      table
        .uuid("user_id")
        .unsigned()
        .references("id")
        .inTable("users")
        .onDelete("CASCADE")
        .index();
      table
        .uuid("sportsbook_id")
        .unsigned()
        .references("id")
        .inTable("sportsbooks")
        .onDelete("CASCADE")
        .index();
    })
    .createTable("bet_types", (table) => {
      table.uuid("id").defaultTo(knex.raw("uuid_generate_v4()")).primary();
      table.string("bet_type_name");
      table.string("external_id");
      table.string("fanduel_id");
      table.string("draftkings_id");
      table.string("pointbet_id");
      table.string("williamhill_id");
    })
    .createTable("bet_categories", (table) => {
      table.uuid("id").defaultTo(knex.raw("uuid_generate_v4()")).primary();
      table.string("bet_category_name");
      table.string("external_id");
      table.string("fanduel_id");
      table.string("draftkings_id");
      table.string("pointbet_id");
      table.string("williamhill_id");
    })
    .createTable("status", (table) => {
      table.uuid("id").defaultTo(knex.raw("uuid_generate_v4()")).primary();
      table.string("status_name");
      table.string("external_id");
      table.string("fanduel_id");
      table.string("draftkings_id");
      table.string("pointbet_id");
      table.string("williamhill_id");
    })
    .createTable("results", (table) => {
      table.uuid("id").defaultTo(knex.raw("uuid_generate_v4()")).primary();
      table.string("result_name");
      table.string("external_id");
      table.string("fanduel_id");
      table.string("draftkings_id");
      table.string("pointbet_id");
      table.string("williamhill_id");
    })
    .createTable("sports", (table) => {
      table.uuid("id").defaultTo(knex.raw("uuid_generate_v4()")).primary();
      table.string("sport_name");
      table.string("external_id");
      table.string("fanduel_id");
      table.string("draftkings_id");
      table.string("pointbet_id");
      table.string("williamhill_id");
    })
    .createTable("leagues", (table) => {
      table.uuid("id").defaultTo(knex.raw("uuid_generate_v4()")).primary();
      table.string("league_name");
      table.string("external_id");
      table.string("external_sport_id");
      table.string("fanduel_id");
      table.string("draftkings_id");
      table.string("pointbet_id");
      table.string("williamhill_id");
    })
    .createTable("bet_targets", (table) => {
      table.uuid("id").defaultTo(knex.raw("uuid_generate_v4()")).primary();
      table.string("target_name");
      table.string("external_id");
      table.string("league_name");
      table.string("fanduel_id");
      table.string("draftkings_id");
      table.string("pointbet_id");
      table.string("williamhill_id");
      table
        .uuid("league_id")
        .unsigned()
        .references("id")
        .inTable("leagues")
        .onDelete("CASCADE")
        .index();
    })
    .createTable("events", (table) => {
      table.uuid("id").defaultTo(knex.raw("uuid_generate_v4()")).primary();
      table.string("event_name");
      table.string("home_team");
      table.string("away_team");
      table.dateTime("event_date_time");
      table.string("external_id");
      table.string("external_league_id");
      table.string("league_name");
      table.string("external_sport_id");
      table.string("sports_name");
      table.string("fanduel_id");
      table.string("draftkings_id");
      table.string("pointbet_id");
      table.string("williamhill_id");
    })
    .createTable("bets", (table) => {
      table.uuid("id").defaultTo(knex.raw("uuid_generate_v4()")).primary();
      table.string("external_bet_id");
      table.timestamp("date_time");
      table.string("status");
      table.string("sportsbook_name");
      table.string("sport_name");
      table.string("league_name");
      table.string("target_name");
      table.string("event_name");
      table.float("bet_amount");
      table.string("bet_type_name");
      table.string("bet_category_name");
      table.float("odds_american");
      table.float("odds_decimal");
      table.float("handicap");
      table.float("potential_payout");
      table.string("result");
      table.float("payout");
      table.timestamp("event_date_time");
      table.timestamp("date_retrieved");
      table.timestamp("last_update");
      table
        .uuid("status_id")
        .unsigned()
        .references("id")
        .inTable("status")
        .onDelete("CASCADE")
        .index();
      table
        .uuid("sportsbook_id")
        .unsigned()
        .references("id")
        .inTable("sportsbooks")
        .onDelete("CASCADE")
        .index();
      table
        .uuid("sportsbook_state_id")
        .unsigned()
        .references("id")
        .inTable("states")
        .onDelete("CASCADE")
        .index();
      table
        .uuid("sport_id")
        .unsigned()
        .references("id")
        .inTable("sports")
        .onDelete("CASCADE")
        .index();
      table
        .uuid("league_id")
        .unsigned()
        .references("id")
        .inTable("leagues")
        .onDelete("CASCADE")
        .index();
      table
        .uuid("target_id")
        .unsigned()
        .references("id")
        .inTable("bet_targets")
        .onDelete("CASCADE")
        .index();
      table
        .uuid("event_id")
        .unsigned()
        .references("id")
        .inTable("events")
        .onDelete("CASCADE")
        .index();
      table
        .uuid("bet_type_id")
        .unsigned()
        .references("id")
        .inTable("bet_types")
        .onDelete("CASCADE")
        .index();
      table
        .uuid("bet_category_id")
        .unsigned()
        .references("id")
        .inTable("bet_categories")
        .onDelete("CASCADE")
        .index();
      table
        .uuid("result_id")
        .unsigned()
        .references("id")
        .inTable("results")
        .onDelete("CASCADE")
        .index();
      table
        .uuid("user_id")
        .unsigned()
        .references("id")
        .inTable("users")
        .onDelete("CASCADE")
        .index();
      table
        .uuid("account_id")
        .unsigned()
        .references("id")
        .inTable("accounts")
        .onDelete("CASCADE")
        .index();
    });
};

exports.down = (knex) => {
  return knex.schema.dropTableIfExists("users");
};
